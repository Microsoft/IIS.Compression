name: $(Rev:rr)

jobs:
- job: build

  pool:
    name: 'VSEng-MicroBuildV2CustomPool'
    demands:
    - msbuild
    - visualstudio
    - Team -equals IISAdmin

  variables:
    solution: '**\Compression.sln'
    TeamName: 'IIS'
    signType: test
    signingIdentity: 'Microsoft'
    buildType: 'dev'
    buildConfiguration: 'Release'
    productMajor: 1
    productMinor: 0
    publishInstaller: 'true'

  steps:
  - checkout: self
    clean: true
    submodules: recursive

  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
    displayName: 'Install Signing Plugin'
    inputs:
      signType: '$(signType)'

  - task: NuGetToolInstaller@1
    displayName: 'Install NuGet Tool'
    inputs:
      versionSpec: '>=4.7.1'

  - task: NuGetCommand@2
    displayName: 'NuGet restore'
    inputs:
      command: 'restore'
      restoreSolution: $(solution)'
      feedsToUse: config
      nugetConfigPath: NuGet.config

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0 
    displayName: 'Component Detection'

  - task: VSBuild@1
    displayName: 'Build x86'
    inputs:
      solution: '$(solution)'
      vsVersion: 15.0
      msbuildArgs: '/p:PRODUCT_MAJOR=$(productMajor) /p:PRODUCT_MINOR=$(productMinor) /p:BUILD_MAJOR=$(Build.BuildNumber) /p:SignType=$(signType) /p:SigningIdentity=$(signingIdentity)'
      platform: x86
      configuration: '$(buildConfiguration)'
      clean: true
      msbuildArchitecture: x64

  - task: VSBuild@1
    displayName: 'Build x64'
    inputs:
      solution: '$(solution)'
      vsVersion: 15.0
      msbuildArgs: '/p:PRODUCT_MAJOR=$(productMajor) /p:PRODUCT_MINOR=$(productMinor) /p:BUILD_MAJOR=$(Build.BuildNumber) /p:SignType=$(signType) /p:SigningIdentity=$(signingIdentity)'
      platform: x64
      configuration: '$(buildConfiguration)'
      clean: true
      msbuildArchitecture: x64

  - task: CopyFiles@2
    displayName: 'Copy Binaries x86'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\bin\Release\'
      Contents: |
       **/x86/**/*.dll
       **/x86/**/*.exe
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Binaries\x86'

  - task: CopyFiles@2
    displayName: 'Copy Binaries x64'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\bin\Release\'
      Contents: |
       **/x64/**/*.dll
       **/x64/**/*.exe
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Binaries\x64'
 
  - task: CopyFiles@2
    displayName: 'Copy Symbols x86'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**\x86\**\*.pdb'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Symbols\x86'

  - task: CopyFiles@2
    displayName: 'Copy Symbols x64'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**\x64\**\*pdb'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Symbols\x64'

  - task: CopyFiles@2
    displayName: 'Copy Installers x86'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\bin\Release\'
      Contents: '**\x86\**\*.msi'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Installers\x86'
    condition: and(succeeded(), eq(variables['publishInstaller'], 'true'))

  - task: CopyFiles@2
    displayName: 'Copy Installers x64'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)\bin\Release\'
      Contents: '**\x64\**\*.msi'
      TargetFolder: '$(Build.ArtifactStagingDirectory)\Installers\x64'
    condition: and(succeeded(), eq(variables['publishInstaller'], 'true'))

  - task: PublishSymbols@2
    displayName: 'Enable Source Server'
    inputs:
      SymbolsFolder: '$(Build.ArtifactStagingDirectory)\symbols'
      SearchPattern: '**\*.pdb'
      SymbolServerType: TeamServices
    condition: and(succeeded(), eq(variables['buildType'], 'official'))

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Binaries'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\Binaries'
      ArtifactName: Binaries

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Symbols'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\Symbols'
      ArtifactName: symbols

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: Installers'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)\Installers'
      ArtifactName: installers
    condition: and(succeeded(), eq(variables['publishInstaller'], 'true'))